name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run ESLint
        run: npm run lint

  unit-tests:
    name: Unit Tests
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run unit tests with coverage
        run: npm run test:coverage
        
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage
          path: coverage/
          retention-days: 7

  e2e-tests:
    name: E2E Tests
    needs: [lint]
    runs-on: ubuntu-latest
    environment: integration

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium
        
      - name: Run E2E tests
        run: npm run test:e2e
        env:
          PUBLIC_SUPABASE_URL: ${ secrets.PUBLIC_SUPABASE_URL }
          PUBLIC_SUPABASE_KEY: ${ secrets.PUBLIC_SUPABASE_KEY }
          OPENROUTER_API_KEY: ${ secrets.OPENROUTER_API_KEY }
          E2E_USERNAME_ID: ${ secrets.E2E_USERNAME_ID }
          E2E_USERNAME: ${ secrets.E2E_USERNAME }
          E2E_PASSWORD: ${ secrets.E2E_PASSWORD }
          PUBLIC_MOCK_OPEN_ROUTER: ${ secrets.PUBLIC_MOCK_OPEN_ROUTER }
          PUBLIC_SUPABASE_SERVICE_ROLE_KEY: ${ secrets.PUBLIC_SUPABASE_SERVICE_ROLE_KEY }
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  status-comment:
    name: Status Comment
    needs: [lint, unit-tests, e2e-tests]
    if: success()
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Status Comment
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.issue.number;
            
            const lintStatus = '${{ needs.lint.result }}';
            const unitStatus = '${{ needs.unit-tests.result }}';
            const e2eStatus = '${{ needs.e2e-tests.result }}';
            
            const comment = `## Pull Request Checks Status
            
            âœ… Lint: ${lintStatus}
            âœ… Unit Tests: ${unitStatus}
            âœ… E2E Tests: ${e2eStatus}
            
            All checks have passed successfully! ðŸŽ‰`;
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: comment
            }); 